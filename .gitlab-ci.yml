image: maven:alpine

stages:
  - install
  - build
  - publish

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - .m2/repository
    - scripts/node_modules/

# Install dependencies
install:
  stage: install
  script:
    - mvn $MAVEN_CLI_OPTS install -DskipTests=true -Dmaven.javadoc.skip=true -V

# Build the application
package:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean package
  artifacts:
    paths:
      - application/target/application-*.jar

# Lint Node.js files
lint:
  stage: build
  image: node:alpine
  before_script:
    - npm --prefix scripts/ install
  script:
    - npm --prefix scripts/ run lint

# Build and push Docker test image
docker:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo $DOCKER_PASSWORD | docker login -u rohannagar --password-stdin
  script:
    - docker build -t rohannagar/thunder:test .
    - docker push rohannagar/thunder:test
  only:
    refs:
      - master

# Build and push Docker tagged image
docker-deploy:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - TAG_NUMBER="${CI_COMMIT_TAG:1}"
    - IMAGE_TAG="rohannagar/thunder:$TAG_NUMBER"
    - echo $DOCKER_PASSWORD | docker login -u rohannagar --password-stdin
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - tags

